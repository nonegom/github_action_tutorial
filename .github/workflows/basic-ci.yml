# Workflow 이름
name: CI

# 트리거 이벤트
on:
  # main 브랜치에 push될 때
  push:
    branches: [main]
  # main 브랜치로의 PR이 생성/업데이트될 때
  pull_request:
    branches: [main]

# Job 정의
jobs:
  # 테스트 Job
  test:
    # Ubuntu 최신 버전 Runner 사용
    runs-on: ubuntu-latest

    steps:
      # 저장소 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Python 3.9 설치
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # 의존성 캐싱 (선택사항 - 빌드 속도 향상)
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 의존성 설치
      - name: Install dependencies
        run: |
          # pip 업그레이드
          python -m pip install --upgrade pip
          # requirements.txt의 패키지 설치
          pip install -r requirements.txt
          # 테스트용 pytest 설치
          pip install pytest

      # 테스트 실행
      - name: Run tests
        run: |
          # pytest로 tests/ 디렉토리의 모든 테스트 실행
          # -v: verbose 모드 (상세한 출력)
          # PYTHONPATH를 현재 디렉토리로 설정하여 app 모듈을 찾을 수 있도록 함
          PYTHONPATH=. pytest tests/ -v

  build:
    runs-on: ubuntu-latest
    needs: test

    # 권한 설정 추가 (GHCR 푸시용)
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 짧은 SHA 추출
      - name: Extract short SHA
        id: short-sha
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # 소문자로 변환 (GHCR 요구사항)
      - name: Set lowercase repository name
        id: repo-name
        run: echo "repo=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # GitHub Container Registry 로그인
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          # 푸시 활성화
          push: true
          # GHCR 이미지 이름
          tags: |
            ghcr.io/${{ steps.repo-name.outputs.repo }}:latest
            ghcr.io/${{ steps.repo-name.outputs.repo }}:${{ steps.short-sha.outputs.sha }}
          # 빌드 캐시
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 푸시 성공 메시지
      - name: Image pushed successfully
        run: |
          echo "✅ Docker image pushed successfully to GHCR"
          echo "Registry: ghcr.io"
          echo "Repository: ${{ steps.repo-name.outputs.repo }}"
          echo "Tags:"
          echo "  - latest"
          echo "  - ${{ steps.short-sha.outputs.sha }}"
